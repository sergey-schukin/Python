# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
# функция, которая проверяет вводимые пользователем данные на соответствие нужному типу данных

def check_input_number(input_number, input_type, error_msg, fun_num_sign):
    '''Проверяет входное значение на требуемые критерии

    :param input_number: входное значение
    :param input_type: требуемый критерий типа данных
    :param error_msg: текст ошибки для вывода на экран, если критерии не выполняются
    :param fun_num_sign: вызов функции для проверки критерия больше/меньше нуля
    :return: если все критерии выполнены - возвращает входное значение, преобразованное в требуемый тип данных
             если критерии не выполнены - возвращает None
    '''
    try:
        if fun_num_sign(input_type(input_number)):
            return input_type(input_number)
        else:
            raise ValueError
    except ValueError:
        print(error_msg)
        return


def is_positive_num(num):
    '''Возвращает True, если число больше 0'''
    if num > 0:
        return True


def is_negative_num(num):
    '''Возвращает True, если число меньше 0'''
    if num < 0:
        return True


def my_pow_1(x, y):
    '''Возвращает x в степени y, используя оператор ** '''
    return round(x ** y, 2)


def my_pow_2(x, y):
    '''Возвращает x в степени y, используя цикл'''
    res = 1
    for i in range(abs(y)):
        res *= x
    return round(1 / res, 2)


error_msg = 'Ошибка. Неверный ввод. Пожалуйста, повторите.'
var_dict = {
    '''словарь, в котором ключи - это переменные, а значения ключей - это список с критериями.
    Нулевой аргумент списка будет в дальнейшем заполнен значением переменной после ввода пользователем'''
    'x': [None, float, 'действительное положительное число', is_positive_num],
    'y': [None, int, 'целое отрицательное число', is_negative_num]
}

for var in var_dict.keys():
    '''Цикл для заполнения значений переменных x и y в словаре с их проверкой на соответствие критериям'''
    while True:
        var_dict[var][0] = check_input_number(input(f'Введите {var_dict[var][2]} {var}: '),
                                              input_type=var_dict[var][1], error_msg=error_msg,
                                              fun_num_sign=var_dict[var][3])
        if var_dict[var][0] is not None:
            break

print(my_pow_2(var_dict['x'][0], var_dict['y'][0]))
print(my_pow_1(var_dict['x'][0], var_dict['y'][0]))
